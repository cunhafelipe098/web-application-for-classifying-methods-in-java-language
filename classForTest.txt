
// ex Eng
public static String replaceString(String str, String oldStr, String newStr) {

		String retValue = str.replace(oldStr, newStr);
		return retValue;

}

/ex NonEng

public static String replaceStr(String strSrc, String strOld, String strNew) {
		if (strSrc == null)
			return null;

		char srcBuff[] = strSrc.toCharArray();
		int nSrcLen = srcBuff.length;

		if (nSrcLen == 0)
			return "";
		char oldStrBuff[] = strOld.toCharArray();
		
		int nOldStrLen = oldStrBuff.length;

		if (nOldStrLen == 0 || nOldStrLen > nSrcLen)
			return strSrc;

		StringBuffer retBuff = new StringBuffer(nSrcLen * (1 + strNew.length() / nOldStrLen));
		boolean bIsFound = false;

		for (int i = 0; i < nSrcLen;) {
			bIsFound = false;
			if (srcBuff[i] == oldStrBuff[0]) {
				int j;

				for (j = 1; j < nOldStrLen && i + j < nSrcLen && srcBuff[i + j] == oldStrBuff[j]; j++)
					bIsFound = (j == nOldStrLen);

			}
			if (bIsFound) {
				retBuff.append(strNew);
				i += nOldStrLen;
			} else {
				int nSkipTo;

				if (i + nOldStrLen >= nSrcLen)
					nSkipTo = nSrcLen - 1;
				else
					nSkipTo = i;

				while (i <= nSkipTo) {
					retBuff.append(srcBuff[i]);
					i++;
				}
			}
		}
		srcBuff = null;
		oldStrBuff = null;
		return retBuff.toString();
	}